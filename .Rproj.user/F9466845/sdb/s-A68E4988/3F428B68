{
    "collab_server" : "",
    "contents" : "```{r include=FALSE, cache=FALSE}\nset.seed(1014)\noptions(digits = 3)\n\nknitr::opts_chunk$set(\n  comment = \"#>\",\n  message = FALSE,\n  warning = FALSE,\n  collapse = TRUE,\n  cache = TRUE,\n  out.width = \"70%\",\n  fig.align = 'center',\n  fig.width = 6,\n  fig.asp = 0.618,  # 1 / phi\n  fig.show = \"hold\"\n)\n\n```\n\n# Klassifizierende Regression\n\n\n```{r echo = FALSE, out.width = \"30%\", fig.align = \"center\"}\nknitr::include_graphics(\"images/FOM.jpg\")\n```\n\n```{r echo = FALSE, out.width = \"10%\", fig.align = \"center\"}\nknitr::include_graphics(\"images/licence.png\")\n```\n\n\n```{block2, ziele-logist-regression, type='rmdcaution', echo = TRUE} \nLernziele:\n\n- Die Idee der logistischen Regression verstehen.\n- Die Koeffizienten der logistischen Regression interpretieren können.\n- Vertiefungen wie Modellgüte kennen.\n\n\n```\n\n## Vorbereitung\nHier werden wir den Datensatz *Aktienkauf* der Universität Zürich ([Universität Zürich, Methodenberatung](http://www.methodenberatung.uzh.ch/de/datenanalyse/zusammenhaenge/lreg.html)) analysieren. Es handelt es sich hierbei um eine Befragung einer Bank im Zusammenhang mit den Fakten, die mit der Wahrscheinlichkeit, dass jemand Aktien erwirbt, zusammenhängen. Es wurden 700 Personen befragt. Folgende Daten wurden erhoben: Aktienkauf (0 = nein, 1 = ja), Jahreseinkommen (in Tausend CHF), Risikobereitschaft (Skala von 0 bis 25) und  Interesse an der aktuellen Marktlage (Skala von 0 bis 45).\n\nDen Datensatz können Sie in so als `csv`-Datei herunterladen:\n\n```{r}\nAktien <- read.csv2(\"https://raw.githubusercontent.com/luebby/Datenanalyse-mit-R/master/Daten/Aktienkauf.csv\")\n```\n\nZur Unterstützung der Analyse wird (wieder) `mosaic` und `ggplot2` verwendet.\n```{r, message = FALSE}\nlibrary(mosaic)\nlibrary(ggplot2)\n```\n\n## Problemstellung\nKönnen wir anhand der Risikobereitschaft abschätzen, ob die Wahrscheinlichkeit für einen Aktienkauf steigt? Schauen wir uns zunächst ein Streudiagramm an:\n\n```{r}\nxyplot(Aktienkauf ~ Risikobereitschaft, data = Aktien)\n```\n\nDer Zusammenhang scheint nicht sehr ausgeprägt zu sein. Lassen Sie uns dennoch ein lineare Regression durchführen und das Ergebnis auswerten und graphisch darstellen.\n\n```{r}\nlm1 <- lm(Aktienkauf ~ Risikobereitschaft, data = Aktien)\nsummary(lm1)\nplotModel(lm1)\n```\n\nDer Schätzer für die Steigung für `Risikobereitschaft` ist signifikant. Das Bestimmtheitsmaß $R^2$ ist allerdings sehr niedrig, aber wir haben bisher ja auch nur eine unabhängige Variable für die Erklärung der abhängigen Variable herangezogen.\n\nDoch was bedeutet es, dass die Wahrscheinlichkeit ab einer Risikobereitsschaft von ca. 16 über 1 liegt?\n\nWahrscheinlichkeiten müssen zwischen 0 und 1 liegen. Daher brauchen wir eine Funktion, die das Ergebnis einer linearen Regression in einen Bereich von 0 bis 1 bringt, die sogenannte *Linkfunktion*. Eine häufig dafür verwendete Funktion ist die logistische Funktion: $$p(y=1)=\\frac{e^\\eta}{1+e^\\eta}=\\frac{1}{1+e^{-\\eta}}$$\n\n$\\eta$, das sogenannte *Logit*, ist darin die Linearkombination der Einflussgrößen: $$\\eta=\\beta_0+\\beta_1\\cdot x_1+\\dots$$\n\nExemplarisch können wir die logistische Funktion für einen Bereich von $\\eta=-10$ bis $+10$ darstellen (vgl. \\@ref(fig:logist-curve)). Der Graph der  logistischen Funktion ähnelt einem langgestreckten S (\"Ogive\" genannt).\n\n```{r logist-curve, echo = FALSE, fig.cap = \"Die logistische Regression beschreibt eine 's-förmige' Kurve\"}\n# eta-Werte von -10 bis +10 erzeugen\neta <- seq(-10,10,by = 0.1)\n# y-Werte mit logistischer Funktion berechnen\ny <- 1/(1+exp(-eta))        # exp() ist die e-Funktion\n# Graphik ausgeben mit fogenden Plotparametern: \n# für das Label der x-Achse wird ein mathematisches Symbol genutzt\n# Label der y-Achse wird nicht angezeigt\n# statt Punkten wird eine Liniengraphik ausgegeben\nxyplot(y ~ eta, xlab = expression(eta), ylab = \"\", type = \"l\")   \n```\n\n## Die Idee der logistischen Regression\nDie logistische Regression ist eine Anwendung des allgemeinen linearen Modells (*general linear model, GLM*). Die Modellgleichung lautet: $$p(y_i=1)=L\\bigl(\\beta_0+\\beta_1\\cdot x_{i1}+\\dots+\\beta_K\\cdot x_{ik}\\bigr)+\\epsilon_i$$\n\n> $L$ ist die Linkfunktion, in unserer Anwendung die logistische Funktion.  \n$x_{ik}$ sind die beobachten Werte der unabhängigen Variablen $X_k$.  \n$k$ sind die unabhängigen Variablen $1$ bis $K$.\n\nDie Funktion `glm` führt die logistische Regression durch. Wir schauen uns im Anschluss zunächst den Plot an.\n\n```{r}\nglm1 <- glm(Aktienkauf ~ Risikobereitschaft, family = binomial(\"logit\"),\n            data = Aktien)\nplotModel(glm1)\n\n```\n\n> Es werden ein Streudiagramm der beobachten Werte sowie die *Regressionslinie* ausgegeben. Wir können so z. B. ablesen, dass ab einer Risikobereitschaft von etwa 7 die Wahrscheinlichkeit für einen Aktienkauf nach unserem Modell bei mehr als 50 % liegt.\n\nDie Zusammenfassung des Modells zeigt folgendes:\n\n```{r}\nsummary(glm1)\n```\n\nDer Achsenabschnitt (`intercept`) des logits $\\eta$ wird mit `r round(coef(glm1)[1],2)` geschätzt, die Steigung in Richtung `Risikobereitschaft` mit `r round(coef(glm1)[2],2)`. Die (Punkt-)Prognose für die Wahrscheinlickeit eines Aktienkaufs $p(y=1)$ benötigt anders als in der linearen Regression noch die Linkfunktion und ergibt sich somit zu:\n$$p(\\texttt{Aktienkauf}=1)=\\frac{1}{1+e^{-(`r round(coef(glm1)[1],2)` + `r round(coef(glm1)[2],2)` \\cdot \\texttt{Risikobereitschaft})}}$$\n\nDie p-Werte der Koeffizienten können in der Spalte `Pr(>|z|)` abgelesen werden. Hier wird ein *Wald*-Test durchgeführt, nicht wie bei der linearen Regression ein t-Test, ebenfalls mit der $H_0:\\beta_i=0$. Die Teststastistik (`z value`) wird wie in der linearen Regression durch Divisions des Schätzers (`Estimate`) durch den Standardfehler (`Std. Error`) ermittelt. Im *Wald*-Test ist die Teststatistik allerdings $\\chi^2$-verteilt mit einem Freiheitsgrad.\n\n## Welche Unterschiede zur linearen Regression gibt es in der Ausgabe?\nEs gibt kein $R^2$ im Sinne einer erklärten Streuung der $y$-Werte, da die beobachteten $y$-Werte nur $0$ oder $1$ annehmen können. Das Gütemaß bei der logistischen Regression ist das *Akaike Information Criterion* (*AIC*). Hier gilt allerdings: je **kleiner**, desto **besser**. (Anmerkung: es kann ein Pseudo-$R^2$ berechnet werden -- kommt später.)\n\nEs gibt keine F-Statistik (oder ANOVA) mit der Frage, ob das Modell als Ganzes signifikant ist. (Anmerkung: es kann aber ein vergleichbarer Test durchgeführt werden -- kommt später.)\n\n## Interpretation der Koeffizienten\n### y-Achsenabschnitt (`Intercept`) $\\beta_0$ \nFür $\\beta_0>0$ gilt, dass selbst wenn alle anderen unabhängigen Variablen $0$ sind, es eine Wahrscheinlichkeit von mehr als 50% gibt, dass das modellierte Ereignis eintritt. Für $\\beta_0<0$ gilt entsprechend das Umgekehrte.\n\n### Steigung $\\beta_i$ mit $i=1,2,...,K$\nFür $\\beta_i>0$ gilt, dass mit zunehmenden $x_i$ die Wahrscheinlichkeit für das modellierte Ereignis steigt. Bei $\\beta_i<0$ nimmt die Wahrscheinlichkeit entsprechend ab.\n\nEine Abschätzung der Änderung der Wahrscheinlichkeit (*relatives Risiko*, *relative risk* $RR$) kann über das Chancenverhältnis (*Odds Ratio* $OR$) gemacht werden.^[Wahrscheinlichkeit vs. Chance: Die Wahrscheinlichkeit bei einem fairen Würfel, eine 6 zu würfeln, ist $1/6$. Die Chance (*Odd*), eine 6 zu würfeln, ist die Wahrscheinlichkeit dividiert durch die Gegenwahrscheinlichkeit, also $\\frac{1/6}{5/6}=1/5$.] Es ergibt sich vereinfacht $e^{\\beta_i}$. Die Wahrscheinlichkeit ändert sich näherungsweise um diesen Faktor, wenn sich $x_i$ um eine Einheit erhöht. **Hinweis:** $RR\\approx OR$ gilt nur, wenn der Anteil des modellierten Ereignisses in den beobachteten Daten sehr klein ($<5\\%$) oder sehr groß ist ($>95\\%$).\n\n*Übung*: Berechnen Sie das relative Risiko für unser Beispielmodell, wenn sich die `Risikobereitschaft` um 1 erhöht (Funktion `exp()`). Vergleichen Sie das Ergebnis mit der Punktprognose für `Risikobereitschaft `$=7$ im Vergleich zu `Risikobereitschaft `$=8$. Zur Erinnerung: Sie können `makeFun(model)` verwenden.\n\n\n```{r exp_coef_glm1_2}\n# aus Koeffizient abgeschätzt\nexp(coef(glm1)[2])\n```\n\nIn Worten: \"Mit jedem Punkt mehr Risikobereitschaft steigen die Chancen (das OR) für Aktienkauf um `r round(exp(coef(glm1)[2]), 3)`\".\n\n\n```{r}\n\n# mit dem vollständigen Modell berechnet\nfun1 <- makeFun(glm1)\nfun1(Risikobereitschaft = 1)\nfun1(Risikobereitschaft = 8)\n# als Faktor ausgeben\nfun1(Risikobereitschaft = 8)/fun1(Risikobereitschaft = 1)\n```\n\nBei einer Risikobereitschaft von 1 beträgt die Wahrscheinlichkeit für $y=1$, d.h. für das Ereignis \"Aktienkauf\", `r round(fun1(Risikobereitschaft = 1),2)`. Bei einer Risikobereitschaft von 8 liegt diese Wahrscheinlichkeit bei `r round(fun1(Risikobereitschaft = 8),2)`.\n\n\nSie sehen also, die ungefähr abgeschätzte Änderung der Wahrscheinlichkeit weicht hier doch deutlich von der genau berechneten Änderung ab. Der Anteil der Datensätze mit `Risikobereitschaft`$=1$ liegt allerdings auch bei `r round(sum(Aktien$Aktienkauf)/length(Aktien$Aktienkauf),2)`.\n\n## Kategoriale Variablen\nWie schon in der linearen Regression können auch in der logistschen Regression kategoriale Variablen als unabhängige Variablen genutzt werden. Als Beispiel nehmen wir den Datensatz `tips` und versuchen abzuschätzen, ob sich die Wahrscheinlichkeit dafür, dass ein Raucher bezahlt hat (`smoker == yes`), in Abhängigkeit vom Wochentag ändert. \n\nSofern noch nicht geschehen, können Sie so als `csv`-Datei herunterladen:\n```{r read_tips_klass_regr}\ntips <- read.csv(\"https://sebastiansauer.github.io/data/tips.csv\")\n\n```\n\n\nZunächst ein Plot:\n```{r jitter_tips}\nxyplot(jitter(as.numeric(smoker)) ~ day, data = tips)\n```\n\n**Hinweis:** Um zu sehen, ob es an manchen Tagen mehr Raucher gibt, sollten Sie zumindest eine Variable \"verrauschen\" (\"*jittern*\"). Da die Variable `smoker` eine nominale Variable ist und die Funktion `jitter()` nur mit numerischen Variablen arbeitet, muss sie mit `as.numeric()` in eine numerische Variable umgewandelt werden.\n\nDie relativen Häufigkeiten zeigt folgende Tabelle:\n\n```{r}\n(tab_smoke <- tally(smoker ~ day, data = tips, format = \"proportion\"))\n```\n\nHinweis: Durch die Klammerung wird das Objekt `tab_smoke` direkt ausgegeben.\n\nProbieren wir die logistische Regression aus:\n\n```{r}\nglmtips <- glm(smoker ~ day, family = binomial(\"logit\"),data = tips)\nsummary(glmtips)\n```\n\nAuch hier können wir die Koeffizienten in Relation zur Referenzkategorie (hier: Freitag) interpretieren. Die Wahrscheinlichkeit ist an einem Samstag niedriger, der Wert für `daySat` ist negativ. Eine Abschätzung erhalten wir wieder mit $e^{\\beta_i}$:\n\n```{r}\nexp(coef(glmtips)[2])\n```\n\nDaher ist das Chancenverhältnis (*Odds Ratio*), dass am Samstag ein Raucher am Tisch sitzt, näherungsweise um den Faktor `r round(exp(coef(glmtips)[2]),2)` niedriger als am Freitag[^173]: \n\n\n$${OR=\\frac{\\frac{P(Raucher|Samstag)}{1-P(Raucher|Samstag)}}\n{\\frac{P(Raucher|Freitag)}{1-P(Raucher|Freitag)}}\n=\\frac{\\frac{`r round(tab_smoke[2,2],4)`}{`r round(tab_smoke[1,2],4)`}}\n{\\frac{`r round(tab_smoke[2,1],4)`}{`r round(tab_smoke[1,1],4)`}}\n\\approx `r round((tab_smoke[2,2]/tab_smoke[1,2])/(tab_smoke[2,1]/tab_smoke[1,1]),4)`}$$\n\nDie Wahrscheinlichkeit für einen Raucher am Samstag können wir uns wieder komfortabel so ausgeben lassen:\n\n```{r}\nfun2 <- makeFun(glmtips)\nfun2(day = \"Sat\")\n```\n\n\n\n## Multiple logistische Regression\nWir kehren wieder zurück zu dem Datensatz *Aktienkauf*. Können wir unser Model `glm1` mit nur einer erklärenden Variable verbessern, indem weitere unabhängige Variablen hinzugefügt werden?\n\n\n```{r glm2_tips}\nglm2 <- glm(Aktienkauf ~ Risikobereitschaft + Einkommen + Interesse, \n            family = binomial(\"logit\"), data = Aktien)\nplotModel(glm2)\nsummary(glm2)\n```\n\n\n\n\nAlle Schätzer sind signifkant zum 0.1 %-Niveau (`***` in der Ausgabe). Zunehmende Risikobereitschaft (der Einfluss ist im Vergleich zum einfachen Modell stärker geworden) und zunehmendes Interesse erhöhen die Wahrscheinlichkeit für einen Aktienkauf. Steigendes Einkommen hingegen senkt die Wahrscheinlichkeit.\n\nIst das Modell besser als das einfache? Ja, da der AIC-Wert von `r round(AIC(glm1),2)` auf `r round(AIC(glm2),2)` gesunken ist.\n\nDie Graphik zeigt die Verläufe in Abhängigkeit von den verschiedenen Variablen und den Kombinationen der Variablen.\n\n\n## Modell- bzw. Klassifikationsgüte\nLogistische Regressionsmodelle werden häufig zur Klassifikation verwendet, z. B. ob der Kredit für einen Neukunden ein \"guter\" Kredit ist oder nicht. Daher sind die Klassifikationseigenschaften bei logistischen Modellen wichtige Kriterien.\n\nHierzu werden die aus dem Modell ermittelten Wahrscheinlichkeiten ab einem Schwellenwert (*cutpoint*), häufig $0.5$, einer geschätzten $1$ zugeordnet, unterhalb des Schwellenwertes einer $0$. Diese aus dem Modell ermittelten Häufigkeiten werden dann in einer sogenannten Konfusionsmatrix (*confusion matrix*) mit den beobachteten Häufigkeiten verglichen.\n\nDaher sind wichtige Kriterien eines Modells, wie gut diese Zuordnung erfolgt. Dazu werden die Sensitivität (*True Positive Rate, TPR*), also der Anteil der mit $1$ geschätzten an allen mit $1$ beobachten Werten, und die Spezifität (*True Negative Rate*) berechnet. Ziel ist es, dass beide Werte möglichst hoch sind.\n\nSie können die Konfusionsmatrix \"zu Fuß\" berechnen, in dem Sie eine neue Variable einfügen, die ab dem cutpoint $1$ und sonst $0$ ist und mit dem Befehl `tally()` ausgeben. Alternativ können Sie das Paket `SDMTools` verwenden mit der Funktion `confusion.matrix()`. Ein Parameter ist `cutpoint`, der standardmäßig auf $0.5$ steht.\n\n```{r}\n# Konfusionsmatrix \"zu Fuß\" berechnen\n# cutpoint = 0.5 setzen\n# neue Variable predicted anlegen mit 1, wenn modellierte Wahrscheinlichkeit > 1 ist\ncutpoint = 0.5\nAktien$predicted <- ((glm1$fitted.values) > cutpoint)*1\n# Kreuztabelle berechnen\n(cm <- tally(~predicted+Aktienkauf, data = Aktien))\n# Sensitivität (TPR)\ncm[2,2]/sum(cm[,2])\n# Spezifität (TNR)\ncm[1,1]/sum(cm[,1])\n\n# mit Hilfe des Pakets SDMTools\n# ggf. install.packages(\"SDMTools\")\nlibrary(SDMTools)\n# optional noch Parameter cutpoint = 0.5  angeben\n(cm <- confusion.matrix(Aktien$Aktienkauf, glm1$fitted.values)) \nsensitivity(cm)\nspecificity(cm)\n```\n\n\n\nWenn die Anteile der $1$ in den beobachteten Daten sehr gering sind (z. B. bei einem medizinischem Test auf eine seltene Krankheit, Klicks auf einen Werbebanner oder Kreditausfall), kommt eine Schwäche der logistischen Regression zum Tragen: Das Modell wird so optimiert, dass die Wahrscheinlichkeiten $p(y=1)$ alle unter $0.5$ liegen. Das würde zu einer Sensitität von $0$ und einer Spezifiät von $1$ führen. Daher kann es sinnvoll sein, den Cutpoint zu varieren. Daraus ergibt sich ein verallgemeinertes Gütemaß, die *ROC*-Kurve (*Return Operating Characteristic*) und den daraus abgeleiteten *AUC*-Wert (*Area Under Curve*). \n\nHierzu wird der Cutpoint zwischen 0 und 1 variiert und die Sensitivität gegen $1-$Spezifität (welche Werte sind als $1$ modelliert worden unter den beobachten $0$, *False Positive Rate, FPR*). Um diese Werte auszugeben, benötigen Sie das Paket `ROCR` und die Funktion `performance()`.\n\n```{r}\n# ggf. install.packages(\"ROCR\")\nlibrary(ROCR)\n# Ein für die Auswertung notwendiges prediction Objekt anlegen\npred <- prediction(glm1$fitted.values, Aktien$Aktienkauf)\n# ROC Kurve\nperf <- performance(pred,\"tpr\",\"fpr\")\nplot(perf)\nabline(0,1, col = \"grey\")\n# Area under curve (ROC-Wert)\nperformance(pred,\"auc\")@y.values\n\n```\n\n\n\nAUC liegt zwischen $0.5$, wenn das Modell gar nichts erklärt (im Plot die graue Linie) und $1$. Hier ist der Wert also recht gering. Akzeptable Werte liegen bei $0.7$ und größer, gute Werte sind es ab $0.8$.^[Hosmer/Lemeshow, Applied Logistic Regression, 3rd Ed. (2013), S. 164]\n\n## Vertiefung\n\n### Modellschätzung\nDas Modell wird nicht wie bei der lineare Regression über die Methode der kleinsten Quadrate (OLS) geschätzt, sondern über die *Maximum Likelihood* Methode. Die Koeffizienten werden so gewählt, dass die beobachteten Daten am wahrscheinlichsten (*Maximum Likelihood*) werden.\n\nDas ist ein iteratives Verfahren (OLS erfolgt rein analytisch), daher wird in der letzten Zeile der Ausgabe auch die Anzahl der Iterationen (`Fisher Scoring Iterations`) ausgegeben.\n\nDie Devianz des Modells (`Residual deviance`) ist $-2$ mal die logarithmierte Likelihood. Die Nulldevianz (`Null deviance`) ist die Devianz eines Nullmodells, d. h., alle $\\beta$ außer der Konstanten sind 0.\n\n### Likelihood Quotienten Test\nDer Likelihood Quotienten Test (*Likelihood Ratio Test, LR-Test*) vergleicht die Likelihood $L_0$ des Nullmodels mit der Likelihood $L_{\\beta}$ des geschätzten Modells. Die Prüfgröße des LR-Tests ergibt sich aus: $${T=-2\\cdot ln\\left( \\frac{L_0}{L_{\\beta}}\\right)}$$\n$T$ ist näherungsweise $\\chi ^2$-verteilt mit $k$ Freiheitsgraden.\n\nIn R können Sie den Test mit `lrtest()` aufrufen. Sie benötigen dazu das Paket `lmtest`.\n\n```{r libs_glm_model_test}\nlibrary(lmtest)\nlrtest(glm2)\n```\n\n\nDas Modell `glm2` ist als Ganzes signifikant, der p-Wert ist sehr klein.\n\nDen Likelihood Quotienten Test können Sie auch verwenden, um zwei Modelle miteinander zu vergleichen, z. B., wenn Sie eine weitere Variable hinzugenommen haben und wissen wollen, ob die Verbesserung auch signifikant war.\n\n\n```{r}\nlrtest(glm1, glm2)\n```\n\n\n\nJa, die Modelle `glm1` (mit einer erklärenden Variable) und `glm2` unterscheiden sich signifikant voneinander.\n\n\n### Pseudo-$R^2$ \nVerschiedene Statistiker haben versucht, aus der Likelihood eine Größe abzuleiten, die dem $R^2$ der linearen Regression entspricht. Exemplarisch sei hier McFaddens $R^2$ gezeigt: $${R^2=1-\\frac{ln(L_{\\beta})}{ln(L_0)}}$$ Wie bei bei dem $R^2$ der linearen Regression liegt der Wertebereich zwischen 0 und 1. Ab einem Wert von 0,4 kann die Modellanpassung als gut eingestuft werden. Wo liegen  $R^2$ der beiden Modelle `glm1` und `glm2`? Sie können es direkt berechnen oder das Paket `BaylorEdPsych` verwenden.\n\n```{r}\n# direkte Berechnung\n1 - glm1$deviance/glm1$null.deviance\n1 - glm2$deviance/glm2$null.deviance\n# ggf. install.packages(\"BaylorEdPsych\")\nlibrary(BaylorEdPsych)\nPseudoR2(glm1)\nPseudoR2(glm2)\n```\n\n\n\nInsgesamt ist die Modellanpassung, auch mit allen Variablen, als schlecht zu bezeichnen. **Hinweis:** Die Funktion `PseudoR2(model)` zeigt verschiedene Pseudo-$R^2$ Statistiken, die jeweils unter bestimmten Bedingungen vorteilhaft einzusetzen sind. Für weitere Erläuterungen sei auf die Literatur verwiesen.\n\n\n\n## Übung: Rot- oder Weißwein?\n\nDer Datensatz untersucht den Zusammenhang zwischen der Qualität und physiochemischen Eigenschaften von portugisieschen Rot- und Weißweinen [@cortez2009modeling].\n\n\nSie können in unter <https://goo.gl/Dkd7nK> herunterladen. Die Originaldaten finden Sie im UCI Machine Learning Repository[^336].\n\nVersuchen Sie anhand geeigneter Variablen, Rot- und Weißweine (richtig) zu klassifizieren[^338]. \n\n**Zusatzaufgabe:** Die Originaldaten bestehen aus einem Datensatz für Weißweine und einem für Rotweine. Laden Sie diese, beachten Sie die Fehlermeldung und beheben die damit verbundenen Fehler und fassen beide Datensätze zu einem gemeinsamen Datensatz zusammen, in dem eine zusätzliche Variable `color` aufgenommen wird (Rot = 0, Weiß = 1).\n\n\n## Literatur\n\n\n- David M. Diez, Christopher D. Barr, Mine &Ccedil;etinkaya-Rundel (2014): *Introductory Statistics with Randomization and Simulation*, [https://www.openintro.org/stat/textbook.php?stat_book=isrs](https://www.openintro.org/stat/textbook.php?stat_book=isrs),  Kapitel 6.4\n- Nicholas J. Horton, Randall Pruim, Daniel T. Kaplan (2015): Project MOSAIC Little Books *A Student's Guide to R*,  [https://github.com/ProjectMOSAIC/LittleBooks/raw/master/StudentGuide/MOSAIC-StudentGuide.pdf](https://github.com/ProjectMOSAIC/LittleBooks/raw/master/StudentGuide/MOSAIC-StudentGuide.pdf), Kapitel 8\n - Gareth James, Daniela Witten, Trevor Hastie, Robert Tibshirani (2013): *An Introduction to Statistical Learning -- with Applications in R*, [http://www-bcf.usc.edu/~gareth/ISL/](http://www-bcf.usc.edu/~gareth/ISL/), Kapitel 4.1-4.3\n- Maike Luhmann (2015): *R für Einsteiger*, Kapitel 17.5\n- Daniel Wollschläger (2014): *Grundlagen der Datenanalyse mit R*, Kapitel 8.1\n\n\n\n[^173]: Am Freitag liegen die Chancen (das OR) für einen Raucher bei `r round(exp(coef(glmtips)[1]),2)`. Das OR für Samstag ist das Produkt dieser beiden OR. Um das OR zu einer Wahrscheinlichkeit umzurechnen kann man, möchte vom \"von Hand\" arbeiten, diese Formel verwenden: $p = OR / (OR + 1)$.\n\n\n[^336]: http://archive.ics.uci.edu/ml/datasets/Wine+Quality\n\n[^338]: Anregungen zu dieser Übung stammen von INTW Statistics: https://www.inwt-statistics.de/blog-artikel-lesen/Logistische_Regression_Beispiel_mit_R.html",
    "created" : 1493219917702.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4101299532",
    "id" : "3F428B68",
    "lastKnownWriteTime" : 1493219992,
    "last_content_update" : 1493219992617,
    "path" : "~/Documents/Publikationen/In_Arbeit/Praxis_der_Datenanalyse/072_klassifizierende_Regression.Rmd",
    "project_path" : "072_klassifizierende_Regression.Rmd",
    "properties" : {
        "docOutlineVisible" : "1"
    },
    "relative_order" : 16,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}