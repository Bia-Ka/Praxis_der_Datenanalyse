{
    "collab_server" : "",
    "contents" : "```{r include=FALSE, cache=FALSE}\nset.seed(1014)\noptions(digits = 3)\n\nknitr::opts_chunk$set(\n  comment = \"#>\",\n  message = FALSE,\n  warning = FALSE,\n  collapse = TRUE,\n  cache = TRUE,\n  out.width = \"70%\",\n  fig.align = 'center',\n  fig.width = 6,\n  fig.asp = 0.618,  # 1 / phi\n  fig.show = \"hold\"\n)\n\n```\n\n\n## Außereheliche Affären\n\nWovon ist die Häufigkeit von Affären (Seitensprüngen) in Ehen abhängig? Diese Frage soll anhand des Datensates `Affair` untersucht werden.\n\nQuelle: <http://statsmodels.sourceforge.net/0.5.0/datasets/generated/fair.html>\n\nDer Datensatz findet sich (in ähnlicher Form) auch im R-Paket `COUNT` (https://cran.r-project.org/web/packages/COUNT/index.html).\n\nLaden wir als erstes den Datensatz in R. Wählen Sie zuerst das Verzeichnis als Arbeitsverzeichnis, in dem die Daten liegen. Dann laden Sie z.B. mit dem R-Commander (s. Skript) oder \"per Hand\" z.B. bei mir so:\n\n```{r}\nAffair <- read.csv(\"data/Affairs.csv\")\n```\n\nSchauen wir mal, ob es funktioniert hat (\"Datenmatrix betrachten\"):\n\n```{r}\nhead(Affair)\n```\n\n\nOk scheint zu passen. Was jetzt?\n\n\n### Zentrale Statistiken\n\nGeben Sie zentrale deskriptive Statistiken an für Affärenhäufigkeit und Ehezufriedenheit!\n\n```{r}\n# nicht robust:\nmean(Affair$affairs, na.rm = T)\nsd(Affair$affairs, na.rm = T)\n# robust:\nmedian(Affair$affair, na.rm = T)\nIQR(Affair$affair, na.rm = T)\n```\n\nEs scheint, die meisten Leute haben keine Affären:\n\n```{r}\ntable(Affair$affairs)\n```\n\n\nMan kann sich viele Statistiken mit dem Befehl `describe` aus `psych` ausgeben lassen, das ist etwas praktischer:\n\n```{r, eval = TRUE, echo = TRUE}\nlibrary(psych)\n                 \ndescribe(Affair$affairs)\ndescribe(Affair$rating)\n```\n\nDazu muss das Paket `psych` natürlich vorher installiert sein. Beachten Sie, dass man ein Paket nur *einmal* installieren muss, aber jedes Mal, wenn Sie R starten, auch starten muss (mit `library`).\n\n```{r, eval = FALSE}\ninstall.packages(\"psych\")\n```\n\n\n### Visualisieren\n\nVisualisieren Sie zentrale Variablen!\n\nSicherlich sind Diagramme auch hilfreich. Dies geht wiederum mit dem R-Commander oder z.B. mit folgenden Befehlen:\n\n```{r}\n\nlibrary(ggplot2)\nqplot(x = affairs, data = Affair)\nqplot(x = rating, data = Affair)\n```\n\nDie meisten Menschen (dieser Stichprobe) scheinen mit Ihrer Beziehung sehr zufrieden zu sein.\n\n\n### Wer ist zufriedener mit der Partnerschaft: Personen mit Kindern oder ohne?\n\nNehmen wir dazu mal ein paar `dplyr`-Befehle:\n\n```{r}\nlibrary(dplyr)\nAffair %>% \n  group_by(children) %>% \n  summarise(rating_children = \n              mean(rating, na.rm = T))\n```\n\nAh! Kinder sind also ein Risikofaktor für eine Partnerschaft! Gut, dass wir das geklärt haben.\n\n### Wie viele fehlende Werte gibt es? \n\nWas machen wir am besten damit?\n\nDiesen Befehl könnten wir für jede Spalte auführen:\n\n```{r}\nsum(is.na(Affair$affairs))\n```\n\nOder lieber alle auf einmal:\n\n```{r}\nAffair %>% \n  summarise_each(funs(sum(is.na(.))))\n```\n\n\nÜbrigens gibt es ein gutes [Cheat Sheet](https://www.rstudio.com/wp-content/uploads/2015/02/data-wrangling-cheatsheet.pdf) für `dplyr`.\n\nAh, gut, keine fehlenden Werte. Das macht uns das Leben leichter.\n\n\n### Wer ist glücklicher: Männer oder Frauen?\n\n```{r}\nAffair %>% \n  group_by(gender) %>% \n  summarise(rating_gender = mean(rating))\n```\n\nPraktisch kein Unterschied. Heißt das auch, es gibt keinen Unterschied in der Häufigkeit der Affären?\n\n```{r}\nAffair %>% \n  group_by(gender) %>% \n  summarise(affairs_gender = mean(affairs))\n```\n\nScheint auch kein Unterschied zu sein...\n\nUnd zum Abschluss noch mal etwas genauer: Teilen wir mal nach Geschlecht und nach Kinderstatus auf, also in 4 Gruppen. Theoretisch dürfte es hier auch keine Unterschiede/Zusammenhänge geben. Zumindest fällt mir kein sinnvoller Grund ein; zumal die vorherige eindimensionale Analyse keine Unterschiede zu Tage gefördert hat.\n\n\n```{r}\nAffair %>% \n  group_by(gender, children) %>% \n  summarise(affairs_mean = mean(affairs),\n            rating_mean = mean(rating))\n\nAffair %>% \n  group_by(children, gender) %>% \n  summarise(affairs_mean = mean(affairs),\n            rating_mean = mean(rating))\n```\n\n\n### Effektstärken\n\nBerichten Sie eine relevante Effektstärke!\n\nHm, auch keine gewaltigen Unterschiede. Höchstens für die Zufriedenheit mit der Partnerschaft bei kinderlosen Personen scheinen sich Männer und Frauen etwas zu unterscheiden. Hier stellt sich die Frage nach der Größe des Effekts, z.B. anhand Cohen's d. Dafür müssen wir noch die SD pro Gruppe wissen:\n\n\n```{r}\nAffair %>% \n  group_by(children, gender) %>% \n  summarise(rating_mean = mean(rating),\n            rating_sd = sd(rating))\n```\n\n\n```{r}\nd <- (4.4 - 4.1)/(1)\n```\n\nDie Effektstärke beträgt etwa `r d`.\n\n\n### Korrelationen\n\nBerechnen und visualisieren Sie zentrale Korrelationen!\n\n```{r}\nAffair %>% \n  select_if(is.numeric) %>% \n  cor -> cor_tab\n\ncor_tab\n\nlibrary(corrplot)\ncorrplot(cor_tab)\n```\n\n\n\n### Ehejahre und Affären\n\nWie groß ist der Einfluss (das Einflussgewicht) der Ehejahre bzw. Ehezufriedenheit auf die Anzahl der Affären?\n\nDazu sagen wir R: \"Hey R, rechne mal ein lineares Modell\", also eine normale \n(lineare) Regression. Dazu können wir entweder das entsprechende Menü im R-Commander auswählen, oder folgende R-Befehle ausführen:\n\n```{r}\nlm1 <- lm(affairs ~ yearsmarried, data = Affair)\nsummary(lm1)  # Ergebnisse der Regression zeigen\nlm2 <- lm(affairs ~ rating, data = Affair)\nsummary(lm2)\n```\n\nAlso: `yearsmarried` und `rating` sind beide statistisch signifikante Prädiktoren für die Häufigkeit von Affären. Das adjustierte $R^2$ ist allerdings in beiden Fällen nicht so groß.\n\n### Ehezufriedenheit als Prädiktor\n\nUm wie viel erhöht sich die erklärte Varianz (R-Quadrat) von Affärenhäufigkeit wenn man den Prädiktor Ehezufriedenheit zum Prädiktor Ehejahre hinzufügt? (Wie) verändern sich die Einflussgewichte (b)?\n\n```{r}\nlm3 <- lm(affairs ~ rating + yearsmarried, data = Affair)\nlm4 <- lm(affairs ~ yearsmarried + rating, data = Affair)\nsummary(lm3)\nsummary(lm4)\n```\n\nOk. Macht eigentlich die Reihenfolge der Prädiktoren in der Regression einen \nUnterschied? Der Vergleich von Modell 3 vs. Modell 4 beantwortet diese Frage.\n\n\n```{r, echo = FALSE}\nr2_lm2 <- summary(lm2)$r.squared\nr2_lm1 <- summary(lm1)$r.squared\nr2_lm3 <- summary(lm3)$r.squared\nr2_lm4 <- summary(lm4)$r.squared\nr2_diff <- round(r2_lm3 - r2_lm1, 2)\n\n```\n\nWir sehen, dass beim 1. Regressionsmodell das R^2 `r round(r2_lm1, 2)` war; beim 2. Modell `r round(r2_lm2, 2)` und beim 3. Modell liegt R^2 bei `r round(r2_lm3, 2)`. Die Differenz zwischen Modell 1 und 3 liegt bei (gerundet) `r r2_diff`; wenig.\n  \n  \n\n\n\n\n### Weitere Prädiktoren der Affärenhäufigkeit\n\nWelche Prädiktoren würden Sie noch in die Regressionsanalyse aufnehmen?\n\nHm, diese Frage klingt nicht so, als ob der Dozent die Antwort selber wüsste... Naja, welche Variablen gibt es denn alles:\n\n```{r, echo = FALSE}\nnames(Affair)\n```\n\nZ.B. wäre doch interessant, ob Ehen mit Kinder mehr oder weniger Seitensprüngen aufweisen. Und ob die \"Kinderfrage\" die anderen Zusammenhänge/Einflussgewichte in der Regression verändert. Probieren wir es auch. Wir können wiederum im R-Comamnder ein Regressionsmodell anfordern oder es mit der Syntax probieren:\n\n```{r}\nlm5 <- lm(affairs~ rating + yearsmarried + children, data = Affair)\nsummary(lm5)\nr2_lm5 <- summary(lm5)$r.squared\n```\n\nDas Regressionsgewicht von `childrenyes` ist negativ. Das bedeutet, dass Ehen mit Kindern weniger Affären verbuchen (aber geringe Zufriedenheit, wie wir oben gesehen haben! Hrks!). Allerdings ist der p-Wert nich signifikant, was wir als Zeichen der Unbedeutsamkeit dieses Prädiktors verstehen können. $R^2$ lungert immer noch bei mickrigen `r r2_lm5` herum. Wir haben bisher kaum verstanden, wie es zu Affären kommt. Oder unsere Daten bergen diese Informationen einfach nicht.\n\nWir könnten auch einfach mal Prädiktoren, die wir haben, ins Feld schicken. Mal sehen, was dann passiert:\n\n```{r}\nlm6 <- lm(affairs ~ ., data = Affair)\nsummary(lm6)\nr2_lm6 <- round(summary(lm6)$r.squared, 2)\n```\n\nDer \".\" im Befehl `affairs ~ .` oben soll sagen: nimm \"alle Variablen, die noch in der Datenmatrix übrig sind\".\n\nInsgesamt bleibt die erklärte Varian in sehr bescheidenem Rahmen: `r r2_lm6`. Das zeigt uns, dass es immer noch nur schlecht verstanden ist -- im Rahmen dieser Analyse -- welche Faktoren die Affärenhäufigkeit erklärt.\n\n### Unterschied zwischen den Geschlechtern\n\nUnterscheiden sich die Geschlechter statistisch signifikant? Wie groß ist der Unterschied? Sollte hierlieber das d-Maß oder Rohwerte als Effektmaß  angegeben werden?\n\nHier bietet sich ein t-Test für unabhängige Gruppen an. Die Frage lässt auf eine ungerichtete Hypothese schließen ($\\alpha$ sei .05). Mit dem entsprechenden Menüpunkt im R-Commander oder mit folgender Syntax lässt sich diese Analyse angehen:\n\n```{r}\nt1 <- t.test(affairs ~ gender, data = Affair)\nt1\n```\n\n\nDer p-Wert ist mit `r t1$p.value` > $\\alpha$. Daher wird die $H_0$ beibehalten. Auf Basis der Stichprobendaten entscheiden wir uns für die $H_0$. Entsprechend umschließt das 95%-KI die Null.\n\nDa die Differenz nicht signifikant ist, kann argumentiert werden, dass wir `d` auf 0 schätzen müssen. Man kann sich den d-Wert auch z.B. von {MBESS} schätzen lassen.\n\nDafür brauchen wir die Anzahl an Männer und Frauen: `r table(Affair$gender)`.\n\n\n```{r}\nlibrary(MBESS)\nci.smd(ncp = t1$statistic,\n    n.1 = 315,\n    n.2 = 286)\n```\n\nDas Konfidenzintervall ist zwar relativ klein (die Schätzung also aufgrund der recht großen Stichprobe relativ präzise), aber der Schätzwert für d `smd` liegt sehr nahe bei Null. Das stärkt unsere Entscheidung, von einer Gleichheit der Populationen (Männer vs. Frauen) auszugehen.\n\n### Kinderlose Ehe vs. Ehen mit Kindern\n\nRechnen Sie die Regressionsanalyse getrennt für kinderlose Ehe und Ehen mit Kindern!\n\nHier geht es im ersten Schritt darum, die entsprechenden Teil-Mengen der Datenmatrix zu erstellen. Das kann man natürlich mit Excel o.ä. tun. Alternativ könnte man es in R z.B. so machen:\n\n```{r}\nAffair2 <- Affair[Affair$children == \"yes\", ]\nlm7 <- lm(affairs~ rating, data = Affair2)\nsummary(lm7)\n\nAffair3 <- Affair[Affair$children == \"no\", ]\nlm8 <- lm(affairs~ rating, data = Affair3)\nsummary(lm8)\n```\n  \n  \nÜbrigens, einfacher geht das \"Subsetten\" so:\n\n```{r, MESSAGE = FALSE}\nlibrary(dplyr)\nAffair4 <- filter(Affair, children == \"yes\")\nhead(Affair4)\n```\n\n\n### Halodries\n\nRechnen Sie die Regression nur für \"Halodries\"; d.h. für Menschen mit Seitensprüngen. Dafür müssen Sie alle Menschen ohne Affären aus den Datensatz entfernen.\n\n\nAlso, rechnen wir nochmal die Standardregression (`lm1`). Probieren wir den Befehl `filter` dazu nochmal aus:\n\n```{r}\nAffair5 <- filter(Affair, affairs != 0)\nlm9 <- lm(affairs ~ rating, data = Affair5)\nsummary(lm9)\n```\n\n\n### logistische Regression\n\nBerechnen Sie für eine logistische Regression mit \"Affäre ja vs. nein\" als Kriterium, wie stark der Einfluss von Geschlecht, Kinderstatus, Ehezufriedenheit und Ehedauer ist!\n\n```{r}\n\nAffair %>% \n  mutate(affairs_dichotom = if_else(affairs == 0, 0, 1)) %>% \n  glm(affairs_dichotom ~ gender + children + rating + yearsmarried,\n      data = ., \n      family = \"binomial\") -> lm10\n\nsummary(lm10)\n\n```\n\nWenn `if_else` unbekannt ist, lohnt sich ein Blick in die Hilfe mit `?if_else` (`dplyr` muss vorher geladen sein).\n\nAha, signifikant ist die Ehezufriedenheit: Je größer `rating` desto geringer die Wahrscheinlickeit für `affairs_dichotom`. Macht Sinn!\n\n\nÜbrigens, die Funktion `lm` und `glm` spucken leider keine brave Tabelle in Normalform aus. Aber man leicht eine schöne Tabelle (data.frame) bekommen mit dem Befehl `tidy` aus `broom`:\n\n```{r}\nlibrary(broom)\ntidy(lm10) \n```\n\n\nUnd Tabellen (d.h. brave Dataframes) kann man sich schön ausgeben lassen z.B. mit dem Befehl `knitr::kable`:\n\n```{r}\nlibrary(knitr)\ntidy(lm10) %>% kable\n```\n\n\n### Zum Abschluss\n\nVisualisieren wir mal was!\n\nOk, wie wäre es damit:\n\n```{r}\nAffair %>% \n   select(affairs, gender, children, rating) %>%\n  ggplot(aes(x = affairs, y = rating)) + \n  geom_jitter(aes(color = gender, shape = children)) \n```\n\n\n```{r}\nAffair %>% \n  mutate(rating_dichotom = ntile(rating, 2)) %>% \n  ggplot(aes(x = yearsmarried, y = affairs)) +\n  geom_jitter(aes(color = gender)) +\n  geom_smooth()\n```\n\n\nPuh. Geschafft!\n\n\n## Befehlsübersicht\n\n\nFunktion               Beschreibung\n-----------------      -------------\ndata                   Lädt Daten aus einem Datensatz\nchisq.test             Rechnet einen $\\chi^2$-Test\ncompute.es::chies      Liefert Effektstärkemaße für einen $\\chi^2$-Test\nglm                    Rechnet eine generalisiertes lineares Modell (logistische Regression)\nexp                    Delogarithmiert einen Ausdruck\ncoef                   Liefert die Koeffizienten von einem Objekt des Typs `lm` oder `glm` zurück.  \npredict                Macht eine Vorhersage für ein Objekt des Typs `lm` oder `glm`\npsych::describe        Liefert eine Reihe zentraler Statistiken\nis.na                  Zeigt an, ob ein Vektor fehlende Werte beinhaltet\ndplyr::summarise_each  Führt `summarise` für jede Spalte aus\nt.test                 Rechnet einen t-Test\nMBESS:ci.smd           Berechnet Cohens d\ndplyr::ntile           Teilt einen Wertebereich in $n$ gleich große Teile auf\n.                      und gibt für jeden Fall an, in welchem Teil er sich befindet\n  \n\n  \n\n\n\n\n### Versionshinweise und SessionInfo\n* Datum erstellt: `r Sys.Date()`\n* R Version: `r getRversion()`\n* `dplyr` Version: `r packageVersion(\"dplyr\")`\n\n\n\n```{r}\nsessionInfo()\n```\n\n\n\n  \n  ",
    "created" : 1493235361937.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2433601348",
    "id" : "3E148A76",
    "lastKnownWriteTime" : 1493293260,
    "last_content_update" : 1493293260,
    "path" : "~/Documents/Publikationen/In_Arbeit/Praxis_der_Datenanalyse/076_Fallstudie_Affairs.Rmd",
    "project_path" : "076_Fallstudie_Affairs.Rmd",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 21,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}