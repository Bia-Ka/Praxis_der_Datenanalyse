summarise(
group_by(filter(select(stats_test, -c(row_number, date_time)), !is.na(score), interest)),
delay = mean(score), n = n()), n > 10, bestanden == "ja")
filter(stats_test, bestanden == "ja")
group_by(filter(select(stats_test, -c(row_number, date_time)), !is.na(score), interest))
summarise(
group_by(filter(select(stats_test, -c(row_number, date_time)), !is.na(score), interest)),
Punkte = mean(score), n = n())
bestanden_gruppen <-
filter(
summarise(
group_by(filter(select(stats_test, -c(row_number, date_time)),  interest)),
Punkte = mean(score), n = n()), n > 10, bestanden == "ja")
bestanden_gruppen <-
filter(
summarise(
group_by(filter(select(stats_test, -c(row_number, date_time)), interest)),
Punkte = mean(score), n = n()), bestanden == "ja")
bestanden_gruppen <-
filter(
summarise(
group_by(filter(select(stats_test, -c(row_number, date_time)), interest)),
Punkte = mean(score), n = n()), bestanden == "ja")
group_by(filter(select(stats_test, -c(row_number, date_time)), interest))
group_by(stats_test, interest)
bestanden_gruppen <-
filter(
summarise(
group_by(filter(select(stats_test, -c(row_number, date_time), bestanden == "ja"), interest)),
Punkte = mean(score), n = n()))
bestanden_gruppen <-
filter(
summarise(
group_by(filter(select(stats_test, -c(row_number, date_time)) , bestanden == "ja"), interest),
Punkte = mean(score), n = n()))
filter(
summarise(
group_by(filter(select(stats_test, -c(row_number, date_time)) , bestanden == "ja"), interest),
Punkte = mean(score), n = n()))
stats_test %>%
select(-row_number, -date_time)) %>%
filter(bestanden == "ja") %>%
group_by(interest) %>%
summarise(Punkte = mean(score),
n = n())
stats_test %>%
select(-row_number, -date_time)) %>%
filter(bestanden == "ja") %>%
group_by(interest) %>%
summarise(Punkte = mean(score),
n = n())
stats_test %>%
select(-row_number, -date_time)) %>%
filter(bestanden == "ja") %>%
group_by(interest) %>%
summarise(Punkte = mean(score),
n = n())
stats_test %>%
select(-row_number, -date_time) %>%
filter(bestanden == "ja") %>%
group_by(interest) %>%
summarise(Punkte = mean(score),
n = n())
stats_test %>%
select(-row_number, -date_time) %>%
filter(bestanden == "ja") %>%
group_by(interest) %>%
summarise(Punkte = mean(score),
n = n())
stats_test %>%
select(score) %>%
mutate(score_delta = score - mean(.$score)) %>%
mutate(score_delta_squared = score_delta^2) %>%
summarise(score_var = mean(score_delta_squared)) %>%
summarise(sqrt(score_var))
```{r}
stats_test2 <- select(stats_test, -date_time)
desctable(stats_test2, stats = stats_normal)
```
desctable(stats_test2, stats = stats_normal)
qplot(x = score,
data = stats_test)
qplot(x = score,
data = stats_test,
geom = "bar")
qplot(x = score,
data = stats_test,
geom = "histogram")
qplot(x = score,
data = stats_test,
geom = "bar")
qplot(x = score,
data = stats_test,
geom = "histogram")
qplot(x = bestaden, fill = interst, data = stats_test)
qplot(x = bestanden, fill = interst, data = stats_test)
qplot(x = bestanden, fill = interest, data = stats_test)
qplot(x = bestanden, fill = factor(interest), data = stats_test)
stats_test %>%
ggplot() +
aes(x = sex, fill = factor(interesst)) +
geom_bar(position = "fill")
stats_test %>%
ggplot() +
aes(x = sex, fill = factor(interesst)) +
geom_bar(position = "fill")
stats_test %>%
ggplot() +
aes(x = bestanden, fill = factor(interesst)) +
geom_bar(position = "fill")
stats_test %>%
ggplot() +
aes(x = bestanden, fill = factor(interest)) +
geom_bar(position = "fill")
stats_test %>%
filter(interest == 1 | interest == 6) %>%
ggplot() +
aes(x = bestanden, fill = factor(interest)) +
geom_bar(position = "fill")
stats_test %>%
group_by(bestanden) %>%
summarise(interest_mw = mean(interest)) -> stats_test_summary
stats_test_summary
stats_test %>%
group_by(bestanden) %>%
summarise(interest_mw = mean(interest, na.rm = TRUE)) -> stats_test_summary
stats_test_summary
stats_test_summary %>%
qplot(x = bestanden, y = interest_mw, data = .)
stats_test_summary
stats_test %>%
group_by(bestanden) %>%
summarise(interest_mw = mean(interest, na.rm = TRUE),
study_time_mw = mean(study_time, na.rm = TRUE)) -> stats_test_summary
stats_test_summary
stats_test_summary %>%
qplot(x = bestanden, y = interest_mw, data = ., color = factor(interest_mw))
tats_test %>%
group_by(bestanden, study_time) %>%
summarise(interest_mw = mean(interest, na.rm = TRUE)) %>%
qplot(x = bestanden, y = interest_mw, data = ., color = factor(study_time))
stats_test %>%
group_by(bestanden, study_time) %>%
summarise(interest_mw = mean(interest, na.rm = TRUE)) %>%
qplot(x = bestanden, y = interest_mw, data = ., color = factor(study_time))
stats_test %>%
group_by(bestanden, study_time) %>%
summarise(interest_mw = mean(interest, na.rm = TRUE)) %>%
qplot(x = bestanden, y = interest_mw, data = ., color = factor(study_time)) +
geom_line(group = 1)
stats_test %>%
filter(study_time == 1 | study_time == 5) %>%
group_by(bestanden, study_time) %>%
summarise(interest_mw = mean(interest, na.rm = TRUE)) %>%
qplot(x = bestanden, y = interest_mw, data = ., color = factor(study_time)) +
geom_line(group = 1)
stats_test %>%
#  filter(study_time == 1 | study_time == 5) %>%
group_by(bestanden, study_time) %>%
summarise(interest_mw = mean(interest, na.rm = TRUE)) %>%
qplot(x = bestanden, y = interest_mw, data = ., color = factor(study_time)) +
geom_line(group = 1)
stats_test %>%
#  filter(study_time == 1 | study_time == 5) %>%
group_by(bestanden, study_time) %>%
summarise(interest_mw = mean(interest, na.rm = TRUE)) %>%
qplot(x = bestanden, y = interest_mw, data = ., color = factor(study_time)) +
geom_line(group = 1, color = "gray80")
stats_test %>%
#  filter(study_time == 1 | study_time == 5) %>%
group_by(bestanden, study_time) %>%
summarise(interest_mw = mean(interest, na.rm = TRUE)) %>%
qplot(x = bestanden, y = interest_mw, data = ., color = factor(study_time)) +
geom_line(aes(group = 1))
stats_test %>%
#  filter(study_time == 1 | study_time == 5) %>%
group_by(bestanden, study_time) %>%
summarise(interest_mw = mean(interest, na.rm = TRUE)) %>%
qplot(x = bestanden, y = interest_mw, data = ., color = factor(study_time)) +
geom_line(group = 1)
stats_test %>%
filter(study_time == 1 | study_time == 5) %>%
group_by(bestanden, study_time) %>%
summarise(interest_mw = mean(interest, na.rm = TRUE)) %>%
qplot(x = bestanden, y = interest_mw, data = ., color = factor(study_time)) +
geom_line(group = 1)
stats_test %>%
filter(study_time == 1 | study_time == 2) %>%
group_by(bestanden, study_time) %>%
summarise(interest_mw = mean(interest, na.rm = TRUE)) %>%
qplot(x = bestanden, y = interest_mw, data = ., color = factor(study_time)) +
geom_line(group = 1)
stats_test %>%
filter(study_time == 1 | study_time == 2) %>%
group_by(bestanden, study_time) %>%
summarise(interest_mw = mean(interest, na.rm = TRUE)) %>%
qplot(x = bestanden, y = interest_mw, data = ., color = factor(study_time)) +
geom_line(aes(group = factor(study_time))
```
stats_test %>%
#  filter(study_time == 1 | study_time == 2) %>%
group_by(bestanden, study_time) %>%
summarise(interest_mw = mean(interest, na.rm = TRUE)) %>%
qplot(x = bestanden, y = interest_mw, data = ., color = factor(study_time)) +
geom_line(aes(group = factor(study_time))
```
stats_test %>%
#  filter(study_time == 1 | study_time == 2) %>%
group_by(bestanden, study_time) %>%
summarise(interest_mw = mean(interest, na.rm = TRUE)) %>%
qplot(x = bestanden, y = interest_mw, data = ., color = factor(study_time)) +
geom_line(aes(group = study_time)
```
stats_test %>%
#  filter(study_time == 1 | study_time == 2) %>%
group_by(bestanden, study_time) %>%
summarise(interest_mw = mean(interest, na.rm = TRUE)) %>%
qplot(x = bestanden, y = interest_mw, data = ., color = factor(study_time)) +
geom_line(aes(group = study_time)
```
stats_test %>%
filter(study_time == 1 | study_time == 2) %>%
group_by(bestanden, study_time) %>%
summarise(interest_mw = mean(interest, na.rm = TRUE)) %>%
qplot(x = bestanden, y = interest_mw, data = ., color = factor(study_time)) +
geom_line(aes(group = factor(study_time)))
stats_test %>%
filter(study_time == 1 | study_time == 5) %>%
group_by(bestanden, study_time) %>%
summarise(interest_mw = mean(interest, na.rm = TRUE)) %>%
qplot(x = bestanden, y = interest_mw, data = ., color = factor(study_time)) +
geom_line(aes(group = factor(study_time)))
stats_test %>%
filter(study_time == 1 | study_time == 5) %>%
group_by(bestanden, study_time) %>%
summarise(interest_mw = mean(interest, na.rm = TRUE))
stats_test %>%
filter(study_time == 2 | study_time == 5) %>%
group_by(bestanden, study_time) %>%
summarise(interest_mw = mean(interest, na.rm = TRUE)) %>%
qplot(x = bestanden, y = interest_mw, data = ., color = factor(study_time)) +
geom_line(aes(group = factor(study_time)))
stats_test %>%
#filter(study_time == 2 | study_time == 5) %>%
group_by(bestanden, study_time) %>%
summarise(interest_mw = mean(interest, na.rm = TRUE)) %>%
qplot(x = bestanden, y = interest_mw, data = ., color = factor(study_time)) +
geom_line(aes(group = factor(study_time)))
stats_test %>%
qplot(x = bestanden,
y = interest,
data = .,
geom = "boxplot")
qplot(x = interest,
y = score,
data = stats_test,
geom = boxplot)
qplot(x = interest,
y = score,
data = stats_test,
geom = "boxplot")
qplot(x = factor(interest),
y = score,
data = stats_test,
geom = "boxplot")
wo_men <- read_csv("data/stats_test.csv")
wo_men <- read_csv("data/test_inf_short.csv")
stats_teste %>%
ggplot(aes(x = score, y = self_eval)) +
geom_point() -> p1
stats_test %>%
ggplot(aes(x = score, y = self_eval)) +
geom_point()
p1 + geom_smooth(method = "lm", se = FALSE)
stats_test %>%
ggplot(aes(x = score, y = self_eval)) +
geom_point() -> p1
p1 + geom_smooth(method = "lm", se = FALSE)
stats_test %>%
ggplot(aes(y = score, x = self_eval)) +
geom_point() -> p1
p2 <- p1 + geom_smooth(method = "lm", se = FALSE)
p2
stats_test %>%
ggplot(aes(y = score, x = self_eval)) +
geom_jitter() -> p1
p2 <- p1 + geom_smooth(method = "lm", se = FALSE)
stats_test %>%
ggplot(aes(y = score, x = self_eval)) +
geom_jitter() -> p1
p2 <- p1 + geom_smooth(method = "lm", se = FALSE)
p2
x <- seq(from = 1, to = 10, by = .3)
y <- sin(x) + rnorm(n = length(x), mean = 0, sd = .3)
daten <- data_frame(x, y)
ggplot(daten) +
aes(x = x, y = y) +
coord_fixed(ratio = 5/1) +
labs(y = "") +
geom_point() +
ggtitle("Daten") -> p1
ggplot(daten) +
aes(x = x, y = y) +
geom_point() +
coord_fixed(ratio = 5/1) +
labs(y = "") +
geom_smooth(method = "lm", se = FALSE, color = "red") +
ggtitle("A")-> p2
ggplot(daten) +
aes(x = x, y = y) +
geom_point() +
coord_fixed(ratio = 5/1) +
labs(y = "") +
geom_line(color = "blue") +
ggtitle("B") -> p3
ggplot(daten) +
aes(x = x, y = y) +
geom_point() +
coord_fixed(ratio = 5/1) +
labs(y = "") +
stat_function(n = 99, fun = sin, color = "darkgreen") +
ggtitle("A") -> p4
grid.arrange(p1, p2, p3, p4, ncol = 4)
library(gridExtra)
grid.arrange(p1, p2, p3, p4, ncol = 4)
train <- slice(stats_test, 1:200)
test <- slice(stats_test, 201:306)
df <- data_frame(
i <- 1:500,
flip <- sample(x = c(0,1), size = 500, replace = TRUE)
)
df <- data_frame(
i = 1:500,
flip = sample(x = c(0,1), size = 500, replace = TRUE)
)
ggplot(df) +
aes(x = i, y = flip) +
geom_line() +
geom_point()
df <- data_frame(
i = 1:500,
flip = sample(x = c(0,1), size = 500, replace = TRUE),
cum = cumsum(flip)
)
ggplot(df) +
aes(x = i, y = cumsum) +
geom_line() +
geom_point()
View(df)
df <- data_frame(
i = 1:500,
flip = sample(x = c(0,1), size = 500, replace = TRUE),
cum = cumsum(flip)
)
ggplot(df) +
aes(x = i, y = cum) +
geom_line() +
geom_point()
df <- data_frame(
i = 1:500,
flip = sample(x = c(0,1), size = 500, replace = TRUE),
prop = cumsum(flip) / i
)
ggplot(df) +
aes(x = i, y = cum) +
geom_line() +
geom_point()
ggplot(df) +
aes(x = i, y = prop) +
geom_line() +
geom_point()
ggplot(df) +
aes(x = i, y = prop) +
geom_line() +
geom_point() +
ylim(c(0,1))
ggplot(df) +
aes(x = i, y = prop) +
geom_line() +
geom_point(color = "grey40") +
ylim(c(0,1))
library(compute.es)
library("effsize", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
effsize()
library("pwr", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
cohen.ES
cohen.ES()
cohen.ES(test = "t")
cohen.ES(test = "p")
cohen.ES(test = "p", size = c("small", "medium", "large"))
cohen.ES(test = "p", size = c("small", "medium", "large"))
cohen.ES(test = "p", size = "medium")
cohen.ES()
cohen.ES(test = c("p", "t", "r", "anov", "chisq", "f2"),
size = c("small", "medium", "large"))
?mes
propes(p1 = .2, p2 = .8, n.ab = 50, n.bc = 50)
propes(p1 = .2, p2 = .8, n.ab = 50, n.cd = 50)
df <- readr::read_csv("includes/Befehle_Datenjudo.csv")
knitr::kable(df,
caption = "Befehle des Kapitels 'Datenjudo'")
unlink('040_Datenjudo_cache', recursive = TRUE)
stats_test %>%
select(-c(row_number, date_time)) %>%
group_by(bestanden) %>%
desctable %>%
knitr::kable
stats_test %>%
select(-c(row_number, date_time)) %>%
group_by(bestanden) %>%
desctable
stats_test %>%
select(-c(row_number, date_time)) %>%
group_by(bestanden) %>%
desctable %>% str
unlink('061_Inferenzstatistik_cache', recursive = TRUE)
bookdown::publish_book(render = "local", account = "sebastiansauer1")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::publish_book(render = "local", account = "sebastiansauer1")
d <- mtcars
var_pairs <- t(combn(names(d), 2)) %>%
as_data_frame() %>%
setNames(c("x", "y"))
var_pairs %>%
dplyr::mutate(r.test = purrr::map2(x, y, ~ stats::cor.test(d[[.x]], d[[.y]])),
r.test = purrr::map(r.test, broom::tidy)) %>%
tidyr::unnest(r.test)
combn(letters[1:4], 2)
library("tools", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
tools::showNonASCIIfile("bib.bib")
tools::showNonASCIIfile("bib.bib")
tools::showNonASCIIfile("bib.bib")
tools::showNonASCIIfile("includes/wann_welcher_test.csv")
top_n(stats_test, 2)
stats_test <- select(stats_test, -bestanden)
library(readr)
test_inf_short <- read_csv("~/Documents/Publikationen/In_Arbeit/Praxis_der_Datenanalyse/data/test_inf_short.csv")
View(test_inf_short)
test_inf_short <- select(test_inf_short, row_number, date_time, bestanden, study_time, self_eval, interest, score)
write_csv(test_inf_short, "test_inf_short.csv")
stats_test <- test_inf_short
top_n(stats_test, 2)
top_n(stats_test)
top_n(stats_test, n = 10)
top_n(stats_test, n = 20)
count(stats_test, score)
count(stats_test, score, sort = TRUE)
top_n(stats_test, 3, interest)
count(stats_test, interest)
count(stats_test, score)
count(stats_test, score, sort = TRUE)
top_n(stats_test, 3, interest)
stats_test %>%
select(-row_number, -date_time) %>%
filter(bestanden == "ja") %>%
group_by(interest) %>%
summarise(Punkte = mean(score),
n = n())
extra <- read.csv("data/extra.csv")
extra %>%
select(i01, i02r) %>%
scale() %>%  # z-standardisieren
head()  # nur die ersten paar Zeilen abdrucken
extra %>%
mutate_if(is.numeric, funs("z" = scale)) %>%
head
glimpse(data) %>% head
df <- read_csv("includes/Diagrammtypen.csv")
View(df)
pander::pander(df, caption = "Häufige Diagrammtypen")
pander::cache.off()
panderOptions("table.alignment.default", "left")
pander::pander(df, caption = "Häufige Diagrammtypen")
library(pander)
panderOptions("table.alignment.default", "left")
pander::pander(df, caption = "Häufige Diagrammtypen")
kable(df)
knitr::kable(df)
df <- readr::read_csv("includes/Befehle_Modellieren.csv")
library(pander)
pander::cache.off()
panderOptions("table.alignment.default", "left")
pander::pander(df, caption = "Befehle des Kapitels 'Modellieren'")
pander(df)
df <- readr::read.csv("includes/Befehle_Modellieren.csv")
pander(df)
pander::cache.off()
df <- readr::read.csv("includes/Befehle_Modellieren.csv")
pander::pander(df, caption = "Befehle des Kapitels 'Modellieren'")
pander(df)
dimnames(df)
View(df)
df <- read.csv("includes/Befehle_Modellieren.csv")
df <- read.csv("includes/Befehle_Modellieren.csv")
pander(df)
df <- read_csv("includes/Befehle_Modellieren.csv")
pander(df)
df <- read_csv("includes/Befehle_Modellieren.csv")
pander::cache.off()
panderOptions("table.alignment.default", "left")
pander::pander(df, caption = "Befehle des Kapitels 'Modellieren'")
View(df)
df <- read_csv("includes/Befehle_Modellieren.csv")
pander::pander(df, caption = "Befehle des Kapitels 'Modellieren'")
devtools::install_github('Rapporter/pander')
library(pander)
df <- read_csv("includes/Befehle_Modellieren.csv")
pander::pander(df, caption = "Befehle des Kapitels 'Modellieren'")
df <- readr::read_csv("includes/wann_welcher_test.csv")
View(df)
knitr::kable(df, caption = "Überblick zur Frage, wann welcher Test verwendet werden soll")
bookdown::publish_book(render = "local", account = "sebastiansauer1")
