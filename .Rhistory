geom_smooth(method = "lm")
# Chunk 21: flights_hexbin
data(flights, package = "nycflights13")
nrow(flights)  # groÃŸ!
ggplot(flights) +
aes(x = distance, y = air_time) +
geom_hex()
# Chunk 22: fig-aes-color
wo_men %>%
filter(height > 150, height < 210, shoe_size < 55) -> wo_men2
wo_men2 %>%
qplot(x = height, y = shoe_size, color = sex, data = .)
# Chunk 23
wo_men %>%
filter(height > 150, height < 210, shoe_size < 55) %>%
qplot(x = height, y = shoe_size, facets = "~sex", color = sex, data = .)
setwd("~/Documents/Forschung/blog_ses/posts/posted_posts/2017-04-27_R_user_group_dplyr")
knitr::knit("2017-04-27-Datenanalyse_mit_dplyr.Rmd")
library(tidyverse)
mtcars %>%
top_n(mpg, 3)
mtcars %>%
top_n(mpg, 3)
mtcars %>%
top_n(3)
mtcars %>%
top_n(3, mpg)
x <- c(5, 1, 3, 2, 2, NA)
row_number(x)
min_rank(x)
dense_rank(x)
data(tips, package = "reshape2")
tips %>%
top_n(3)
View(tips)
tips %>%
top_n(3, tip)
View(tips)
min_rank(x)
df <- data_frame(x)
x %>%
top_n(1)
df %>%
top_n(2)
df %>%
top_n(4)
df %>%
top_n(3)
mtcars %>%
group_by(cyl) %>%
summarise(n_cyl = n())
mtcars %>%
group_by(cyl) %>%
summarise(n_cyl = n()) %>%
mutate(prop = n_cyl / sum(n))
mtcars %>%
group_by(cyl) %>%
summarise(n_cyl = n()) %>%
mutate(prop = n_cyl / sum(n_cyl))
mtcars %>%
group_by(cyl, gear) %>%
summarise(n_cyl = n()) %>%
mutate(prop = n_cyl / sum(n_cyl))
mtcars %>%
group_by(gear, cyl) %>%
summarise(n_cyl = n()) %>%
mutate(prop = n_cyl / sum(n_cyl))
mtcars %>%
group_by(gear, cyl) %>%
summarise(n_cyl = n())
mtcars %>%
group_by(gear, cyl) %>%
summarise(n_cyl = n()) %>%
mutate(prop = n_cyl / sum(n_cyl))
stats_test <- read.csv("data/test_inf_short.csv")
stats_test %>%
count(interest)
stats_test %>%
count(interest) %>%
mutate(prop_interest = n / sum(n))
stats_test$bestanden <- stats_test$score > 25
stats_test %>%
count(interest, bestanden) %>%
mutate(prop_interest = n / sum(n))
stats_test %>%
count(bestanden, interest) %>%
mutate(prop_interest = n / sum(n))
stats_test %>%
count(bestanden, interest) %>%
mutate(prop_interest = n / sum(n)) %>%
summarise(sum(prop_interest))
stats_test %>%
group_by(bestanden, interest) %>%
summarise(n = n()) %>%
mutate(prop_interest = n / sum(n))
stats_test %>%
group_by(interest, bestanden) %>%
summarise(n = n()) %>%
mutate(prop_interest = n / sum(n))
stats_test %>%
count(interest, bestanden) %>%
mutate(prop_interest = n / sum(n))
stats_test %>%
group_by(interest, bestanden) %>%
summarise(n = n()) %>%
mutate(prop_interest = n / sum(n))
stats_test %>%
count(interest, bestanden) %>%
mutate(prop_interest = n / sum(n))
stats_test %>%
group_by(interest, bestanden) %>%
summarise(n = n()) %>%
mutate(prop_interest = n / sum(n))
df <- readr::read_csv(includes/Befehle_Datenjudo.csv)
df <- readr::read_csv("includes/Befehle_Datenjudo.csv")
stats_test <- read.csv("data/test_inf_short.csv")
stats_test %>%
ggplot +
aes(x = study_time, y = score) +
geom_point()
library(tidyverse)
lm1 <- lm(score~study_time, data = stats_test)
stats_test %>% tidy
stats_test %>% summary
lm1 %>% tidy
library(broom)
lm1 %>% tidy
stats_test %>%
ggplot +
aes(x = study_time, y = score) +
geom_point() +
geom_abline(intercept = 24, slope = 2.3, color = "red")
stats_test %>%
ggplot +
aes(x = study_time, y = score) +
geom_jitter() +
geom_abline(intercept = 24, slope = 2.3, color = "red")
stats_test %>%
ggplot +
aes(x = self_eval, y = score) +
geom_jitter() +
geom_abline(intercept = 24,
slope = 2.3,
color = "red") -> p1
stats_test %>%
ggplot +
aes(x = interest, y = score) +
geom_jitter() +
geom_abline(intercept = 24,
slope = 2.3,
color = "red") -> p2
gridExtra::grid.arrange(p1, p2, ncol = 2)
stats_test %>%
ggplot +
aes(x = self_eval, y = score) +
geom_jitter() +
geom_smooth(method = "lm", color = "red", se = FALSE) -> p1
stats_test %>%
ggplot +
aes(x = interest, y = score) +
geom_jitter() +
geom_smooth(method = "lm", color = "red", se = FALSE) -> p2
gridExtra::grid.arrange(p1, p2, ncol = 2)
lm(score ~ study_time, data = stats_test)
predict(LinMod.1, data.frame(total_bill = 30))
LinMod.1 <- lm(tip ~ total_bill, data=tips)
tips <- read.csv("https://sebastiansauer.github.io/data/tips.csv")
LinMod.1 <- lm(tip ~ total_bill, data=tips)
summary(LinMod.1)
predict(LinMod.1, data.frame(total_bill = 30))
library("modelr", lib.loc="~/Rlibs")
tips %>%
add_residuals(LinMod.1)
tips %>%
add_residuals(LinMod.1) %>%
ggplot +
aes(x = resid)
tips %>%
add_residuals(LinMod.1) %>%
ggplot +
aes(x = resid) +
geom_point
tips %>%
add_residuals(LinMod.1) %>%
ggplot +
aes(x = resid) +
geom_point()
tips %>%
add_residuals(LinMod.1) %>%
ggplot +
aes(x = resid) +
geom_histogram()
qplot(x = tip,y = day, data=tips)
LinMod.2 <- lm(tip ~ day, data=tips)
summary(LinMod.2)
levels(tips$day)
tips %>%
add_predictions(LinMod.1) %>%
ggplot +
aes(x = resid) +
geom_histogram()
tips %>%
add_predictions(LinMod.1)
tips %>%
add_predictions(LinMod.1) %>%
ggplot +
aes(x = pred) +
geom_histogram()
tips %>%
add_predictions %>%
add_residuals %>%
ggplot() +
aes(x = resid, y = pred) +
geom_point()
tips %>%
add_predictions(LinMod.1) %>%
add_residuals(LinMod.1) %>%
ggplot() +
aes(x = resid, y = pred) +
geom_point()
library("caret", lib.loc="~/Rlibs")
postResample(obs = tips$tip, tips$tip)
Aktien <- read.csv2("https://raw.githubusercontent.com/luebby/Datenanalyse-mit-R/master/Daten/Aktienkauf.csv")
setwd("~/Documents/Publikationen/In_Arbeit/Praxis_der_Datenanalyse/data")
write_csv("Aktien", "Aktien.csv")
write_csv("Aktien", path = "Aktien.csv")
write.csv("Aktien", path = "Aktien.csv")
write.csv("Aktien", file = "Aktien.csv")
lm1 <- lm(Aktienkauf ~ Risikobereitschaft, data = Aktien)
summary(lm1)
p1 <- qplot(y = Aktienkauf, x = Risikobereitschaft, data = Aktien)
p1 + geom_abline(intercept = .18, slope = .05)
p1 + geom_abline(intercept = .18, slope = .05, color = "red")
x <- seq(-10,10,by = 0.1)
y <- 1/(1+exp(-x))        # exp() ist die e-Funktion
x = x,
y = y) %>%
ggplot() +
aes(x = x, y = y) +
geom_line(color = "#0998a") +
xlab(expression(x))
x = x,
y = y) %>%
ggplot() +
aes(x = x, y = y) +
geom_line(color = "#00998a") +
xlab(expression(x))
Aktien %>%
add_predictions(glm1) %>%
ggplot() +
aes(x = Risikobereitschaft) +
geom_point(aes(y = Aktienkauf)) +
geom_line(aes(y = pred))
glm1 <- glm(Aktienkauf ~ Risikobereitschaft, family = binomial("logit"),
data = Aktien)
Aktien %>%
add_predictions(glm1) %>%
ggplot() +
aes(x = Risikobereitschaft) +
geom_point(aes(y = Aktienkauf)) +
geom_line(aes(y = pred))
glm1 <- glm(Aktienkauf ~ Risikobereitschaft, family = binomial("logit"),
data = Aktien)
Aktien %>%
add_predictions(glm1) %>%
ggplot() +
aes(x = Risikobereitschaft) +
geom_point(aes(y = Aktienkauf)) +
geom_line(aes(y = pred))
Aktien %>%
add_predictions(glm1) %>%
ggplot() +
aes(x = Risikobereitschaft) +
geom_point(aes(y = Aktienkauf)) +
geom_point(aes(y = pred))
Aktien %>%
add_predictions(glm1)
Aktien %>%
add_predictions(glm1) %>%
ggplot() +
aes(x = Risikobereitschaft) +
geom_point(aes(y = Aktienkauf)) +
geom_point(aes(y = exp(pred)))
Aktien %>%
add_predictions(glm1) %>%
ggplot() +
aes(x = Risikobereitschaft) +
geom_point(aes(y = Aktienkauf)) +
geom_point(aes(y = pred))
Aktien %>%
add_predictions(glm1) %>% head
predict(glm1, data.frame(Risikobereitschaft = 11))
predict(glm1, data.frame(Risikobereitschaft = 11), type = "response")
add_predictions
ap <- function(data, model, var = "pred")
{
data[[var]] <- stats::predict(model, data, ...)
data
}
Aktien %>%
ap(glm1, type = "response") %>% head
Aktien %>%
mutate(pred = predict(glm1, data = data.frame("Aktienkauf"), type = "response") %>% head
ggplot() +
aes(x = Risikobereitschaft) +
geom_point(aes(y = Aktienkauf)) +
geom_point(aes(y = pred))
predict(glm1, data.frame(Risikobereitschaft = 11), type = "response")
```
Aktien %>%
mutate(pred = predict(glm1, data = data.frame("Aktienkauf"), type = "response") %>% head
ggplot() +
aes(x = Risikobereitschaft) +
geom_point(aes(y = Aktienkauf)) +
geom_point(aes(y = pred))
```
Aktien %>%
mutate(pred = stats::predict(glm1, data = data.frame(Aktienkauf = .$Aktienkauf), type = "response") %>% head
ggplot() +
aes(x = Risikobereitschaft) +
geom_point(aes(y = Aktienkauf)) +
geom_point(aes(y = pred))
```
Aktien %>%
mutate(pred = stats::predict(glm1, data = data.frame(Aktienkauf = Aktien$Aktienkauf), type = "response") %>% head
ggplot() +
aes(x = Risikobereitschaft) +
geom_point(aes(y = Aktienkauf)) +
geom_point(aes(y = pred))
```
stats::predict(glm1, data = data.frame(Aktienkauf = Aktien$Aktienkauf), type = "response")
Aktien %>%
mutate(pred = stats::predict(glm1,
data = data.frame(Aktienkauf = Aktien$Aktienkauf),
type = "response")
%>% head
ggplot() +
aes(x = Risikobereitschaft) +
geom_point(aes(y = Aktienkauf)) +
geom_point(aes(y = pred))
```
Aktien %>%
mutate(ddd = stats::predict(glm1,
data = data.frame(Aktienkauf = Aktien$Aktienkauf),
type = "response")
%>% head
ggplot() +
aes(x = Risikobereitschaft) +
geom_point(aes(y = Aktienkauf)) +
geom_point(aes(y = pred))
```
df %>%
mutate(ddd = stats::predict(glm1,
data = data.frame(Aktienkauf = Aktien$Aktienkauf),
type = "response")
%>% head
ggplot() +
aes(x = Risikobereitschaft) +
geom_point(aes(y = Aktienkauf)) +
geom_point(aes(y = pred))
```
stats::predict(glm1, data = data_frame(Aktienkauf = Aktien$Aktienkauf), type = "response")
stats::predict(glm1,
data = data.frame(Aktienkauf = Aktien$Aktienkauf),
type = "response")
df %>%
mutate(ddd = stats::predict(glm1,
data = data.frame(Aktienkauf = Aktien$Aktienkauf),
type = "response"))
df <- Aktienkauf
df <- Aktien
df %>%
mutate(ddd = stats::predict(glm1,
data = data.frame(Aktienkauf = Aktien$Aktienkauf),
type = "response"))
Aktien %>%
mutate(pred = stats::predict(glm1,
data = data.frame(Aktienkauf = Aktien$Aktienkauf),
type = "response")) %>%
ggplot() +
aes(x = Risikobereitschaft) +
geom_point(aes(y = Aktienkauf)) +
geom_point(aes(y = pred))
Aktien %>%
mutate(pred = stats::predict(glm1,
data = data.frame(Aktienkauf = Aktien$Aktienkauf),
type = "response")) %>%
ggplot() +
aes(x = Risikobereitschaft) +
geom_point(aes(y = Aktienkauf)) +
geom_line(aes(y = pred))
Aktien %>%
mutate(pred = stats::predict(glm1,
data = data.frame(Aktienkauf = Aktien$Aktienkauf),
type = "response")) %>%
ggplot() +
aes(x = Risikobereitschaft) +
geom_point(aes(y = Aktienkauf)) +
geom_line(aes(y = pred, color = "red"))
Aktien %>%
mutate(pred = stats::predict(glm1,
data = data.frame(Aktienkauf = Aktien$Aktienkauf),
type = "response")) %>%
ggplot() +
aes(x = Risikobereitschaft) +
geom_point(aes(y = Aktienkauf)) +
geom_line(aes(y = pred), color = "red")
glm1)[2] %>% coef %>% exp
glm1[2] %>% coef %>% exp
glm1[2] %>% coef() %>% exp()
glm1[2]
glm1[2] %>% coef()
exp(coef(glm1)[2])
(glm1)[2]
coef(glm1)
predict(glm1, data.frame(Risikobereitschaft = 1))
predict(glm1, data.frame(Risikobereitschaft = 1), type = "response")
predict(glm1, data.frame(Risikobereitschaft = 8), type = "response")
fun1(Risikobereitschaft = 8)/fun1(Risikobereitschaft = 1)
predict(glm1, data.frame(Risikobereitschaft = 1), type = "response")
qplot(x = (as.numeric(smoker)),x = day, data = tips)
qplot(x = (as.numeric(smoker),x = day, data = tips)
```
qplot(x = as.numeric(smoker),x = day, data = tips)
qplot(x = as.numeric(smoker), y = day, data = tips)
qplot(x = as.numeric(smoker), y = day, data = tips, geom = "jitter")
qplot(x = smoker, y = day, data = tips, geom = "jitter")
tips %>% count(smoker, day))
tips %>%
count(smoker, day)
tips %>%
count(smoker, day) %>%
mutate(prop = n / sum(n))
tips %>%
count(day, smoker) %>%
mutate(prop = n / sum(n))
tips %>%
count(day) %>%
mutate(prop = n / sum(n))
tips %>%
count(day, smoker) %>%
mutate(prop = n / sum(n))
tips %>%
group_by(day, smoker) %>%
summarise(n = n()) %>%
mutate(prop = n / sum(n))
predict(glm2, list(day = "Sat"))
glmtips <- glm(smoker ~ day,
family = binomial("logit"),
data = tips)
predict(glmtips, list(day = "Sat"))
predict(glmtips, list(day = "Sat"), type = "response")
library(ROCR)
library(SDMTools)
Aktien <- read.csv("data/Aktien.csv")
setwd("~/Documents/Publikationen/In_Arbeit/Praxis_der_Datenanalyse")
Aktien <- read.csv("data/Aktien.csv")
p1 <- qplot(y = Aktienkauf, x = Risikobereitschaft, data = Aktien)
p1
Aktien <- read.csv2("https://raw.githubusercontent.com/luebby/Datenanalyse-mit-R/master/Daten/Aktienkauf.csv")
setwd("~/Documents/Publikationen/In_Arbeit/Praxis_der_Datenanalyse/data")
read.csv(Aktien, file = "Aktien.csv")
write.csv(Aktien, file = "Aktien.csv")
setwd("~/Documents/Publikationen/In_Arbeit/Praxis_der_Datenanalyse")
Aktien <- read.csv("data/Aktien.csv")
p1 <- qplot(y = Aktienkauf, x = Risikobereitschaft, data = Aktien)
p1
unlink('072_klassifizierende_Regression_cache', recursive = TRUE)
Aktien <- read.csv("data/Aktien.csv")
wo_men <- read_csv("data/wo_men.csv")
library(tidyverse)
wo_men <- read_csv("data/wo_men.csv")
glimpse(wo_men)
wo_men %>%
na.omit -> wo_men.na_omit
nrow(wo_men.na_omit)
wo_men %>%
na.omit %>%
nrow
wo_men %>%
select(height, shoe_size) %>%
correlate() -> km   # Korrelationsmatrix berechnen
library(corrr)
wo_men %>%
select(height, shoe_size) %>%
correlate() -> km   # Korrelationsmatrix berechnen
km
km %>%
shave() %>% # Oberes Dreieck ist redundant, wird "abrasiert"
rplot()  # Korrelationsplot
extra <- read_csv("data/extra.csv")
wo_men %>%
select_if(is.numeric()) %>%
correlate() -> km   # Korrelationsmatrix berechnen
wo_men %>%
select_if(is.numeric) %>%
correlate() -> km   # Korrelationsmatrix berechnen
km
extra %>%
select_if(is.numeric) %>%
correlate() -> km   # Korrelationsmatrix berechnen
km
extra %>%
select(i01:i10) %>%
correlate() -> km   # Korrelationsmatrix berechnen
km
km %>%
shave() %>% # Oberes Dreieck ist redundant, wird "abrasiert"
rplot()  # Korrelationsplot
IQR(extra$n_facebook_friends)
IQR(extra$n_facebook_friends, na.rm = TRUE)
n_distinct(extra$sex)
