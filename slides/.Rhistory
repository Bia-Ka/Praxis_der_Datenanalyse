library(tidyverse)
rename(mtcars, h = hp)
data(stopwords_de)
library(grid)
#library(mosaic)
library(tidyverse)
library(formatR)
library(knitr)
library(gridExtra)
library(broom)
library(grid)
library(modelr)
library(viridis)
library(SDMTools)  # Güte von Klassifikationsmodellen
library(pROC)  # für ROC- und AUC-Berechnung
library(BaylorEdPsych)  # Pseudo-R-Quadrat
library(pander)
library(cluster)
library(psych)
library(stringr)  # Textverarbeitung
library(tidytext)  # Textmining
library(pdftools)  # PDF einlesen
library(downloader)  # Daten herunterladen
library(lsa)  # Stopwörter
library(SnowballC)  # Wörter trunkieren
library(wordcloud)  # Wordcloud anzeigen
stopwords_de <- data_frame(word = stopwords_de)
View(stopwords_de)
stopwords_de <- stopwords_de %>%
dplyr::rename(token = word)
names(stopwords_de) <- "token"
afd_df %>%
anti_join(stopwords_de) -> afd_df
afd_url <- "../data/2016-06-27_afd-grundsatzprogramm_web-version.pdf"
afd_pfad <- "../data/afd_programm.pdf"
afd_raw <- pdftools::pdf_text(afd_pfad)
afd_df <- data_frame(Zeile = 1:96,
afd_raw)
afd_df %>%
unnest_tokens(token, afd_raw) %>%
filter(str_detect(token, "[a-z]")) -> afd_df
count(afd_df)
afd_df %>%
na.omit() %>%  # fehlende Werte löschen
dplyr::count(token, sort = TRUE) %>%
head
stopwords_de <- data_frame(word = stopwords_de)
stopwords_de %>% head %>% kable
data(stopwords_de)
names(stopwords_de) <- "token"
afd_df %>%
anti_join(stopwords_de) -> afd_df
data(stopwords_de)
names(stopwords_de) <- "token"
data(stopwords_de)
colnames(stopwords_de) <- "token"
data(stopwords_de)
glimpse(stopwords_de)
stopwords_de <- data_frame(stopwords_de)
colnames(stopwords_de) <- "token"
afd_df %>%
anti_join(stopwords_de) -> afd_df
afd_df %>%
count(token, sort = TRUE) -> afd_count
